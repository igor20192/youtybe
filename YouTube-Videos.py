#! /usr/bin/env python
#  -*- coding: utf-8 -*-

# GUI module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Apr 18, 2021 07:03:39 PM EEST  platform: Windows NT

import sys
import os

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import unknown_support
import argparse
from tkinter import StringVar, PhotoImage
from tkinter import messagebox as mb

from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
from confing import api_key
import pafy
import vlc

DEVELOPER_KEY = api_key
YOUTUBE_API_SERVICE_NAME = "youtube"
YOUTUBE_API_VERSION = "v3"


def vp_start_gui():
    """Starting point when module is the main routine."""
    global val, w, root
    root = tk.Tk()
    top = Toplevel1(root)
    unknown_support.init(root, top)
    root.mainloop()


w = None


def create_Toplevel1(rt, *args, **kwargs):
    """Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' ."""
    global w, w_win, root
    # rt = root
    root = rt
    w = tk.Toplevel(root)
    top = Toplevel1(w)
    unknown_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


class Toplevel1:
    def __init__(self, top=None):
        """This class configures and populates the toplevel window.
           top is the toplevel containing window."""
        _bgcolor = "#d9d9d9"  # X11 color: 'gray85'
        _fgcolor = "#000000"  # X11 color: 'black'
        _compcolor = "#d9d9d9"  # X11 color: 'gray85'
        _ana1color = "#d9d9d9"  # X11 color: 'gray85'
        _ana2color = "#ececec"  # Closest X11 color: 'gray92'

        top.geometry("600x450+366+103")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("YouTube Video")
        top.iconbitmap("youtube.ico")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.options = StringVar()
        self.data = {}
        self.runplay = False

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.317, rely=0.022, height=21, width=214)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")

        self.Entry1 = tk.Entry(top)
        self.Entry1.place(relx=0.017, rely=0.067, height=20, relwidth=0.957)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="blue")
        self.Entry1.configure(selectforeground="white")
        self.Entry1.configure(textvariable=self.options)

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=-0.533, rely=-0.111, height=24, width=47)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text="""Play""")

        self.imgsearch = PhotoImage(
            file="C:/Users/игорь/Desktop/youtybe/photo/search.png"
        )
        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.433, rely=0.133, height=30, width=77)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text="""Найти""")
        self.Button2.configure(command=self.youtube_search)
        self.Button2.configure(image=self.imgsearch)

        self.Listbox1 = tk.Listbox(top)
        self.Listbox1.place(relx=0.067, rely=0.222, relheight=0.582, relwidth=0.857)
        self.Listbox1.configure(background="white")
        self.Listbox1.configure(disabledforeground="#a3a3a3")
        self.Listbox1.configure(font="TkFixedFont")
        self.Listbox1.configure(foreground="#000000")
        self.Listbox1.configure(highlightbackground="#d9d9d9")
        self.Listbox1.configure(highlightcolor="black")
        self.Listbox1.configure(selectbackground="blue")
        self.Listbox1.configure(selectforeground="white")

        self.img = PhotoImage(file="C:/Users/игорь/Desktop/youtybe/photo/play.png")
        self.Button3 = tk.Button(top)
        self.Button3.place(relx=0.117, rely=0.867, height=33, width=47)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text="""Play""")
        self.Button3.configure(command=self.play)
        self.Button3.configure(image=self.img)

        self.img2 = PhotoImage(file="C:/Users/игорь/Desktop/youtybe/photo/pause.png")
        self.Button4 = tk.Button(top)
        self.Button4.place(relx=0.433, rely=0.867, height=33, width=47)
        self.Button4.configure(activebackground="#ececec")
        self.Button4.configure(activeforeground="#000000")
        self.Button4.configure(background="#d9d9d9")
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#000000")
        self.Button4.configure(highlightbackground="#d9d9d9")
        self.Button4.configure(highlightcolor="black")
        self.Button4.configure(pady="0")
        self.Button4.configure(text="""Pause""")
        self.Button4.configure(command=self.pause)
        self.Button4.configure(image=self.img2)

        self.img1 = PhotoImage(file="C:/Users/игорь/Desktop/youtybe/photo/stop.png")
        self.Button5 = tk.Button(top)
        self.Button5.place(relx=0.75, rely=0.867, height=33, width=47)
        self.Button5.configure(activebackground="#ececec")
        self.Button5.configure(activeforeground="#000000")
        self.Button5.configure(background="#d9d9d9")
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#000000")
        self.Button5.configure(highlightbackground="#d9d9d9")
        self.Button5.configure(highlightcolor="black")
        self.Button5.configure(pady="0")
        self.Button5.configure(text="""Stop""")
        self.Button5.configure(command=self.stop)
        self.Button5.configure(image=self.img1)

    def youtube_search(self):
        self.Listbox1.delete(0, "end")
        youtube = build(
            YOUTUBE_API_SERVICE_NAME, YOUTUBE_API_VERSION, developerKey=DEVELOPER_KEY
        )

        # Call the search.list method to retrieve results matching the specified
        # query term.
        search_response = (
            youtube.search()
            .list(q=self.options.get(), part="id,snippet", maxResults=50, type="video")
            .execute()
        )
        self.data = search_response
        if self.data["items"]:
            print(self.data["items"][0])
            for i in range(len(self.data["items"])):
                self.Listbox1.insert(
                    i,
                    self.data["items"][i]["snippet"]["title"]
                    + " "
                    + self.data["items"][i]["snippet"]["publishTime"],
                )
        else:
            self.Listbox1.insert(0, "Нет результатов поиска")

    def play(self):
        if self.runplay is False:
            try:
                if self.Listbox1.curselection():

                    url = (
                        "https://www.youtube.com/watch?v="
                        + self.data["items"][self.Listbox1.curselection()[0]]["id"][
                            "videoId"
                        ]
                    )
                    video = pafy.new(url)
                    best = video.getbest()
                    playurl = best.url
                    instance = vlc.Instance()
                    self.player = instance.media_player_new()
                    media = instance.media_new(playurl)
                    media.get_mrl()
                    self.player.set_media(media)
                    self.player.play()
                    # while True:
                    # pass
                    self.runplay = True
                else:
                    mb.showerror("Warning", "Не выбрано видио")
            except KeyError:
                mb.showerror("Error", "Видео недоступно")
        else:
            mb.showerror("Warning!", "Остановите предедущее видио! Нажмите STOP")

    def stop(self):
        self.player.stop()
        self.runplay = False

    def pause(self):
        self.player.pause()
        self.runplay = True


if __name__ == "__main__":
    vp_start_gui()
